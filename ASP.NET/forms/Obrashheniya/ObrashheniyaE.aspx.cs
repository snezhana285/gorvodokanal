/*flexberryautogenerated="true"*/

namespace Sneg.Горводоканал
{
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Web.Controls;
    using ICSSoft.STORMNET.Web.AjaxControls;
    using ICSSoft.STORMNET.Web.Tools;
    using System;
    using System.Collections.Generic;
    using ICSSoft.STORMNET.Business;
    using System.Data.SqlClient;

    public partial class ОбращенияE : BaseEditForm<Обращения>
    {
        /// <summary>
        /// Конструктор формы.
        /// </summary>
        public ОбращенияE()
            : base(Обращения.Views.ОбращенияE)
        {
        }

        /// <summary>
        /// Путь до формы.
        /// </summary>
        public static string FormPath
        {
            get { return "~/forms/Obrashheniya/ObrashheniyaE.aspx"; }
        }

        /// <summary>
        /// Вызывается самым первым в Page_Load.
        /// </summary>
        protected override void Preload()
        {
            ctrlТип.MasterViewName = ТипОбращения.Views.ТипОбращенияL.Name;
            ctrlВид.MasterViewName = ВидОбращения.Views.ВидОбращенияL.Name;
            ctrlПричина.MasterViewName = ПричинаОбращения.Views.ПричинаОбращенияL.Name;
            ctrlОператор.MasterViewName = Сотрудник.Views.СотрудникL.Name;
            ctrlОтветственный.MasterViewName = Сотрудник.Views.СотрудникL.Name;

            ctrlНомер.Enabled = false;
            ctrlДатаЗакрытия.OnlyDate = false;
            ctrlДатаПоступления.OnlyDate = false;
        }

        /// <summary>
        /// Здесь лучше всего писать бизнес-логику, оперируя только объектом данных.
        /// </summary>
        protected override void PreApplyToControls()
        {
            
        }

        /// <summary>
        /// Здесь лучше всего изменять свойства контролов на странице,
        /// которые не обрабатываются WebBinder.
        /// </summary>
        protected override void PostApplyToControls()
        {
            

            if (IsPostBack)
            {
                Page.Validate();
            }
            
        }

       

        /// <summary>
        /// Вызывается самым последним в Page_Load.
        /// </summary>
        protected override void Postload()
        {
        }

        /// <summary>
        /// Валидация объекта для сохранения.
        /// </summary>
        /// <returns>true - продолжать сохранение, иначе - прекратить.</returns>
        protected override bool PreSaveObject()
        {
            return base.PreSaveObject();
        }

        /// <summary>
        /// Нетривиальная логика сохранения объекта.
        /// </summary>
        /// <returns>Объект данных, который сохранился.</returns>
        protected override DataObject SaveObject()
        {
            return base.SaveObject();
        }
    }
}